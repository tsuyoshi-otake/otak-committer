{
  "name": "otak-committer",
  "displayName": "otak-committer",
  "description": "VS Code extension for intelligent SCM operations - Multilingual commit message generation with AI support (25 languages supported) and future PR management features.",
  "publisher": "odangoo",
  "license": "MIT",
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/tsuyoshi-otake/otak-committer"
  },
  "bugs": {
    "url": "https://github.com/tsuyoshi-otake/otak-committer/issues"
  },
  "homepage": "https://github.com/tsuyoshi-otake/otak-committer#readme",
  "version": "1.8.3",
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "SCM Providers",
    "AI",
    "Programming Languages",
    "Education"
  ],
  "keywords": [
    "git",
    "commit",
    "AI",
    "openai",
    "multilingual"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "otak-committer",
      "properties": {
        "otakCommitter.language": {
          "type": "string",
          "default": "english",
          "enum": [
            "english",
            "french",
            "german",
            "italian",
            "spanish",
            "portuguese",
            "czech",
            "hungarian",
            "bulgarian",
            "turkish",
            "polish",
            "russian",
            "japanese",
            "chinese",
            "traditionalChinese",
            "korean",
            "vietnamese",
            "thai",
            "hindi",
            "bengali",
            "javanese",
            "tamil",
            "burmese",
            "arabic",
            "hebrew"
          ],
          "enumDescriptions": [
            "English",
            "Fran√ßais",
            "Deutsch",
            "Italiano",
            "Espa√±ol",
            "Portugu√™s",
            "ƒåe≈°tina",
            "Magyar",
            "–ë—ä–ª–≥–∞—Ä—Å–∫–∏",
            "T√ºrk√ße",
            "Polski",
            "–†—É—Å—Å–∫–∏–π",
            "Êó•Êú¨Ë™û",
            "‰∏≠Êñá",
            "ÁπÅÈ´î‰∏≠Êñá",
            "ÌïúÍµ≠Ïñ¥",
            "Ti·∫øng Vi·ªát",
            "‡πÑ‡∏ó‡∏¢",
            "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä",
            "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ",
            "Basa Jawa",
            "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç",
            "·Äô·Äº·Äî·Ä∫·Äô·Ä¨·Äò·Ä¨·Äû·Ä¨",
            "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
            "◊¢◊ë◊®◊ô◊™"
          ],
          "description": "Language for commit messages"
        },
        "otakCommitter.messageStyle": {
          "type": "string",
          "default": "normal",
          "enum": [
            "simple",
            "normal",
            "detailed"
          ],
          "enumDescriptions": [
            "Simple and concise (100 tokens)",
            "Normal length with some context (200 tokens)",
            "Detailed explanation (500 tokens)"
          ],
          "description": "Style and length of generated commit messages"
        },
        "otakCommitter.customMessage": {
          "type": "string",
          "default": "",
          "description": "Custom message to append to the system prompt (added after the diff message)"
        },
        "otakCommitter.useEmoji": {
          "type": "boolean",
          "default": false,
          "description": "Use emoji in commit messages and PR descriptions"
        },
        "otakCommitter.emojiStyle": {
          "type": "string",
          "default": "github",
          "enum": [
            "github",
            "unicode"
          ],
          "enumDescriptions": [
            "GitHub style emoji codes (:smile:)",
            "Unicode emoji characters (üòä)"
          ],
          "description": "Style of emoji to use in messages"
        }
      }
    },
    "commands": [
      {
        "command": "otak-committer.generateMessage",
        "title": "Generate Commit Message",
        "category": "otak-committer",
        "icon": "$(symbol-constant)"
      },
      {
        "command": "otak-committer.generatePR",
        "title": "Generate Pull Request",
        "category": "otak-committer",
        "icon": "$(git-pull-request)"
      },
      {
        "command": "otak-committer.generateIssue",
        "title": "Generate Issue",
        "category": "otak-committer",
        "icon": "$(issue-opened)"
      },
      {
        "command": "otak-committer.openSettings",
        "title": "Open otak-committer Settings",
        "category": "otak-committer"
      },
      {
        "command": "otak-committer.changeLanguage",
        "title": "Change Commit Message Language",
        "category": "otak-committer"
      },
      {
        "command": "otak-committer.changeMessageStyle",
        "title": "Change Commit Message Style",
        "category": "otak-committer"
      },
      {
        "command": "otak-committer.setApiKey",
        "title": "Set OpenAI API Key",
        "category": "otak-committer"
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "otak-committer.generateMessage",
          "group": "navigation",
          "when": "scmProvider == git"
        },
        {
          "command": "otak-committer.generatePR",
          "group": "navigation",
          "when": "scmProvider == git"
        },
        {
          "command": "otak-committer.generateIssue",
          "group": "navigation",
          "when": "scmProvider == git"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "otak-committer.generateMessage",
          "group": "inline",
          "when": "scmProvider == git"
        }
      ],
      "commandPalette": [
        {
          "command": "otak-committer.generateMessage",
          "when": "scmProvider == git"
        },
        {
          "command": "otak-committer.generatePR",
          "when": "scmProvider == git"
        },
        {
          "command": "otak-committer.generateIssue",
          "when": "scmProvider == git"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "compile": "tsc -p ./ --noEmit",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "node ./out/test/runTest.js",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node --loader:.ts=tsx",
    "esbuild": "npm run esbuild-base -- --sourcemap --tsconfig=tsconfig.json",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.10",
    "eslint": "^9.19.0",
    "glob": "^10.3.10",
    "mocha": "^10.3.0",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@octokit/rest": "^21.1.1",
    "axios": "^1.6.7",
    "https-proxy-agent": "^7.0.2",
    "openai": "^4.85.4",
    "simple-git": "^3.27.0"
  }
}
